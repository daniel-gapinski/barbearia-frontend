import Head from "next/head";
import { Button, Flex, Heading, Text, useMediaQuery } from "@chakra-ui/react";
import { canSSRAuth } from "@/utils/canSSRAuth";
import { Sidebar } from "@/components/sidebar";
import { setupAPIClient } from "@/services/api";
import { getStripeJs } from "@/services/stripe-js";


interface PlanosProps {
    premium: boolean;
}

export default function Planos({ premium }: PlanosProps) {

    const [isMobile] = useMediaQuery("(max-width: 500px)");

    const handleSubscribe = async () => {
        if(premium) {
            return;
        }

        try {
            const apiClient = setupAPIClient();
            const response = await apiClient.post("/subscribe");

            const { sessionId } = response.data;

            const stripe = await getStripeJs();
            await stripe.redirectToCheckout({ sessionId: sessionId });

        }catch(err) {
            console.log("Erro ao registrar pagamento: ", err);
        }
    }

    async function handleCreatePortal() {
        try {
            if(!premium) {
                return;
            }

            const apiClient = setupAPIClient();
            const response = await apiClient.post("/create-portal");

            const { sessionId } = response.data;

            window.location.href = sessionId;

        }catch(err) {
            console.log(err);
        }
    }

    return (
        <>
            <Head>
                <title>Barber - Assinaturas</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Sidebar>
                <Flex w="100%" direction="column" alignItems="flex-start" justifyContent="flex-start">
                    <Heading
                        fontSize={isMobile ? "28px" : "2xl"}
                        mt={4}
                        mb={4}
                        mr={4}
                        color="#fff"
                    >
                        Planos
                    </Heading>
                </Flex>

                <Flex pb={8} maxW="1024px" mx="auto" w="100%" direction="column" align="flex-start" justify="flex-start">
                    <Flex width="100%" gap={4} direction={isMobile ? "column" : "row"}>
                        <Flex  color="#fff" rounded={4} p={2} flex={1} bg="barber.400" direction="column">
                            <Heading
                                fontSize={isMobile ? "28px" : "xl"}
                                mt={4}
                                mb={4}
                                mr={4}
                                textAlign="center"
                                color="#fff"
                            >
                                Plano Grátis
                            </Heading>
                            <Text ml={4} mb={2}>- Registrar cortes</Text>
                            <Text ml={4} mb={2}>- Criar apenas três modelos cortes</Text>
                            <Text ml={4} mb={2}>- Editar dados do perfil</Text>
                        </Flex>

                        <Flex  color="#fff" rounded={4} p={2} flex={1} bg="barber.400" direction="column">
                            <Heading
                                fontSize={isMobile ? "28px" : "xl"}
                                mt={4}
                                mb={4}
                                mr={4}
                                textAlign="center"
                                color="#31fb6a"
                            >
                                Premium
                            </Heading>
                            <Text ml={4} mb={2}>- Registrar cortes ilimitados</Text>
                            <Text ml={4} mb={2}>- Criar modelos ilimitados</Text>
                            <Text ml={4} mb={2}>- Editar dados do perfil</Text>
                            <Text ml={4} mb={2}>- Editar modelos de corte</Text>
                            <Text ml={4} mb={2}>- Receber todas as atualizações</Text>
                            <Text fontSize="21px" color="orange.900" ml={4} mt={2}> R$ 9,99/mês</Text>
                            <Button
                                disabled={premium}
                                onClick={handleSubscribe} 
                                mt={3} mb={3} 
                                bg={premium ? "white" : "button.cta"}>
                                    {premium ? "Você já é Premium!" : "Assinar"}
                            </Button>
                            {premium && (
                                <Button onClick={handleCreatePortal} bg="orange.900" mt={1} mb={1} >Alterar Assinatura</Button>
                            )}
                        </Flex>
                    </Flex>
                </Flex>
            </Sidebar>
        </>
    )
}

export const getServerSideProps = canSSRAuth(async (ctx) => {

    try {
        const apiClient = setupAPIClient(ctx);
        const response = await apiClient.get("/me");

        //console.log(response.data);

        return {
            props: {
                premium: response.data?.subscriptions?.status === "active" ? true : false,
            }
        }

    } catch (err) {
        console.log(err);
        return {
           redirect: {
                destination: "/dashboard",
                permanent: false,
           }
        }
    }

})